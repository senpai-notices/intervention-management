<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DistrictDataSet" targetNamespace="http://tempuri.org/DistrictDataSet.xsd" xmlns:mstns="http://tempuri.org/DistrictDataSet.xsd" xmlns="http://tempuri.org/DistrictDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.au.edu.uts.ASDF.ENETCare.InterventionManagement.Data.Properties.Settings.GlobalReference.Default.DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DistrictTableAdapter" GeneratorDataComponentClassName="DistrictTableAdapter" Name="District" UserDataComponentName="DistrictTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.District" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDistricts" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetDistricts" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDistricts" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[District] WHERE (([DistrictId] = @Original_DistrictId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[District] ([Name]) VALUES (@Name);
SELECT DistrictId, Name FROM District WHERE (DistrictId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DistrictId, Name FROM dbo.District</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[District] SET [Name] = @Name WHERE (([DistrictId] = @Original_DistrictId) AND ([Name] = @Original_Name));
SELECT DistrictId, Name FROM District WHERE (DistrictId = @DistrictId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DistrictId" ColumnName="DistrictId" DataSourceName="[Database].dbo.District" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DistrictId" DataSetColumn="DistrictId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.District" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillDistrictByDistrictId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDistrictByDistrictId" GeneratorSourceName="FillDistrictByDistrictId" GetMethodModifier="Public" GetMethodName="GetDistrictByDistrictId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDistrictByDistrictId" UserSourceName="FillDistrictByDistrictId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DistrictId, Name FROM dbo.District
WHERE DistrictId = @DistrictId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="DistrictId" ColumnName="DistrictId" DataSourceName="[Database].dbo.District" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertDistrict" Modifier="Public" Name="InsertDistrict" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertDistrict">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[District] ([Name]) VALUES (@Name);
SELECT DistrictId, Name FROM District WHERE (DistrictId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Name" ColumnName="Name" DataSourceName="[Database].dbo.District" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DistrictDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DistrictDataSet" msprop:Generator_UserDSName="DistrictDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="District" msprop:Generator_TableClassName="DistrictDataTable" msprop:Generator_TableVarName="tableDistrict" msprop:Generator_TablePropName="District" msprop:Generator_RowDeletingName="DistrictRowDeleting" msprop:Generator_RowChangingName="DistrictRowChanging" msprop:Generator_RowEvHandlerName="DistrictRowChangeEventHandler" msprop:Generator_RowDeletedName="DistrictRowDeleted" msprop:Generator_UserTableName="District" msprop:Generator_RowChangedName="DistrictRowChanged" msprop:Generator_RowEvArgName="DistrictRowChangeEvent" msprop:Generator_RowClassName="DistrictRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DistrictId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnDistrictId" msprop:Generator_ColumnPropNameInRow="DistrictId" msprop:Generator_ColumnPropNameInTable="DistrictIdColumn" msprop:Generator_UserColumnName="DistrictId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:District" />
      <xs:field xpath="mstns:DistrictId" />
    </xs:unique>
  </xs:element>
</xs:schema>